<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.flyxiaozhu</groupId>
	<artifactId>eureka-server</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>eureka-server</name>
	<description>Demo project for Spring Boot</description>

  <parent>
    <groupId>com.flyxiaozhu</groupId>
    <artifactId>spring-boot-admin-demo</artifactId>
    <version>1.0-SNAPSHOT</version>
  </parent>

  <properties>
    <docker.image.prefix>flyxiaozhu</docker.image.prefix>
    <project.build.finalName>eureka-server-0.0.1-SNAPSHOT</project.build.finalName>
    <!--<project.dockerFileDir>src/main/docker</project.dockerFileDir>-->
  </properties>

  <dependencies>
    <!--eureka-server 依赖-->
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-netflix-eureka-server</artifactId>
    </dependency>

    <!--暴露自身端口信息 依赖-->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>

    <!--增加安全控制的依赖-->
    <!--<dependency>-->
      <!--<groupId>org.springframework.boot</groupId>-->
      <!--<artifactId>spring-boot-starter-security</artifactId>-->
    <!--</dependency>-->

    <!--JMX-bean 管理所需依赖-->
    <dependency>
      <groupId>org.jolokia</groupId>
      <artifactId>jolokia-core</artifactId>
    </dependency>

    <!--web 组件依赖-->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
  </dependencies>

  <!--<build>-->
    <!--<plugins>-->
      <!--<plugin>-->
        <!--<groupId>com.spotify</groupId>-->
        <!--<artifactId>docker-maven-plugin</artifactId>-->
        <!--<version>1.2.0</version>-->

        <!--&lt;!&ndash;使用 maven 构建Docker镜像 &ndash;&gt;-->
        <!--&lt;!&ndash;<configuration>&ndash;&gt;-->
          <!--&lt;!&ndash;&lt;!&ndash;镜像的名字&ndash;&gt;&ndash;&gt;-->
          <!--&lt;!&ndash;<imageName>${docker.image.prefix}/${project.artifactId}</imageName>&ndash;&gt;-->
          <!--&lt;!&ndash;&lt;!&ndash;基础镜像&ndash;&gt;&ndash;&gt;-->
          <!--&lt;!&ndash;<baseImage>java</baseImage>&ndash;&gt;-->
          <!--&lt;!&ndash;&lt;!&ndash;配置容器启动后执行的命令&ndash;&gt;&ndash;&gt;-->
          <!--&lt;!&ndash;<entryPoint>["java", "-jar", "/${project.build.finalName}.jar"]</entryPoint>&ndash;&gt;-->
          <!--&lt;!&ndash;&lt;!&ndash;指那些需要和 Dockerfile 放在一起，在构建镜像时使用的文件，一般应用 jar 包需要纳入。&ndash;&gt;&ndash;&gt;-->
          <!--&lt;!&ndash;<resources>&ndash;&gt;-->
            <!--&lt;!&ndash;<resource>&ndash;&gt;-->
              <!--&lt;!&ndash;<targetPath>/</targetPath>&ndash;&gt;-->
              <!--&lt;!&ndash;<directory>${project.build.directory}</directory>&ndash;&gt;-->
              <!--&lt;!&ndash;<include>${project.build.finalName}.jar</include>&ndash;&gt;-->
            <!--&lt;!&ndash;</resource>&ndash;&gt;-->
          <!--&lt;!&ndash;</resources>&ndash;&gt;-->
        <!--&lt;!&ndash;</configuration>&ndash;&gt;-->

        <!--&lt;!&ndash;使用 Dockerfile 构建 Docker镜像&ndash;&gt;-->
        <!--<configuration>-->
          <!--&lt;!&ndash;镜像的名字&ndash;&gt;-->
          <!--<imageName>${docker.image.prefix}/${project.artifactId}</imageName>-->
          <!--&lt;!&ndash;使用 docker-compose 构建可注释&ndash;&gt;-->
          <!--&lt;!&ndash;指定 Dockerfile 的位置&ndash;&gt;-->
          <!--&lt;!&ndash;<dockerDirectory>${project.dockerFileDir}</dockerDirectory>&ndash;&gt;-->
          <!--&lt;!&ndash;指那些需要和 Dockerfile 放在一起，在构建镜像时使用的文件，一般应用 jar 包需要纳入。&ndash;&gt;-->
          <!--<resources>-->
            <!--<resource>-->
              <!--<targetPath>/</targetPath>-->
              <!--<directory>${project.build.directory}</directory>-->
              <!--<include>${project.build.finalName}.jar</include>-->
            <!--</resource>-->
          <!--</resources>-->
        <!--</configuration>-->
      <!--</plugin>-->
    <!--</plugins>-->
  <!--</build>-->

  <build>
    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <!--显示应用版本信息-->
        <executions>
          <execution>
            <goals>
              <goal>build-info</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>${java.version}</source>
          <target>${java.version}</target>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
